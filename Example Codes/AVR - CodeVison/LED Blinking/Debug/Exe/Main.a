;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : ATB-TEST
;Version : 0.1
;Date    : 4/19/2024
;Author  : M.A.N.
;Company : TESLAELECTRONIC
;Comments:
;ATB-V2
;
;
;Chip type               : ATmega2560
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*******************************************************/
;
;#include <mega2560.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;#include <delay.h>
;#include <io.h>
;// Declare your global variables here
;
;// Timer4 overflow interrupt service routine
;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
; 0000 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0028 // Reinitialize Timer4 value
; 0000 0029 TCNT4H=0xFC18 >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002A TCNT4L=0xFC18 & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002B // Place your code here
; 0000 002C 
; 0000 002D }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;void main(void)
; 0000 0030 {
;PCODE: $00000016 VOL: 0
; 0000 0031 // Declare your local variables here
; 0000 0032 // Variable used to store graphic display
; 0000 0033 // controller initialization data
; 0000 0034 GLCDINIT_t glcd_init_data;
; 0000 0035 
; 0000 0036 // Crystal Oscillator division factor: 1
; 0000 0037 #pragma optsize-
; 0000 0038 CLKPR=(1<<CLKPCE);
;PCODE: $00000017 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0039 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003A #ifdef _OPTIMIZE_SIZE_
; 0000 003B #pragma optsize+
; 0000 003C #endif
; 0000 003D 
; 0000 003E // Input/Output Ports initialization
; 0000 003F // Port A initialization
; 0000 0040 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0041 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0042 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0043 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0044 
; 0000 0045 // Port B initialization
; 0000 0046 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=Out
; 0000 0047 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0048 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=0
; 0000 0049 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004A 
; 0000 004B // Port C initialization
; 0000 004C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 004D DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 004E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 004F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0050 
; 0000 0051 // Port D initialization
; 0000 0052 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=Out Bit0=Out
; 0000 0053 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (0<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0054 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=T Bit1=0 Bit0=0
; 0000 0055 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0056 
; 0000 0057 // Port E initialization
; 0000 0058 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=Out
; 0000 0059 DDRE=(1<<DDE7) | (1<<DDE6) | (1<<DDE5) | (1<<DDE4) | (1<<DDE3) | (0<<DDE2) | (0<<DDE1) | (1<<DDE0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 005A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=T Bit1=T Bit0=0
; 0000 005B PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005C 
; 0000 005D // Port F initialization
; 0000 005E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 005F DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (1<<DDF3) | (1<<DDF2) | (1<<DDF1) | (1<<DDF0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0060 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0061 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0062 
; 0000 0063 // Port G initialization
; 0000 0064 // Function: Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0065 DDRG=(1<<DDG5) | (1<<DDG4) | (1<<DDG3) | (1<<DDG2) | (1<<DDG1) | (1<<DDG0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0066 // State: Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0067 PORTG=(0<<PORTG5) | (0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0068 
; 0000 0069 // Port H initialization
; 0000 006A // Function: Bit7=In Bit6=Out Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 006B DDRH=(0<<DDH7) | (1<<DDH6) | (0<<DDH5) | (0<<DDH4) | (1<<DDH3) | (1<<DDH2) | (1<<DDH1) | (1<<DDH0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 006C // State: Bit7=T Bit6=0 Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 006D PORTH=(0<<PORTH7) | (0<<PORTH6) | (0<<PORTH5) | (0<<PORTH4) | (0<<PORTH3) | (0<<PORTH2) | (0<<PORTH1) | (0<<PORTH0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006E 
; 0000 006F // Port J initialization
; 0000 0070 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0071 DDRJ=(1<<DDJ7) | (1<<DDJ6) | (1<<DDJ5) | (1<<DDJ4) | (1<<DDJ3) | (1<<DDJ2) | (1<<DDJ1) | (1<<DDJ0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0072 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0073 PORTJ=(0<<PORTJ7) | (0<<PORTJ6) | (0<<PORTJ5) | (0<<PORTJ4) | (0<<PORTJ3) | (0<<PORTJ2) | (0<<PORTJ1) | (0<<PORTJ0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0074 
; 0000 0075 // Port K initialization
; 0000 0076 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0077 DDRK=(1<<DDK7) | (1<<DDK6) | (1<<DDK5) | (1<<DDK4) | (1<<DDK3) | (0<<DDK2) | (0<<DDK1) | (0<<DDK0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0078 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 0079 PORTK=(0<<PORTK7) | (0<<PORTK6) | (0<<PORTK5) | (0<<PORTK4) | (0<<PORTK3) | (0<<PORTK2) | (0<<PORTK1) | (0<<PORTK0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 007A 
; 0000 007B // Port L initialization
; 0000 007C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 007D DDRL=(1<<DDL7) | (1<<DDL6) | (1<<DDL5) | (1<<DDL4) | (1<<DDL3) | (1<<DDL2) | (1<<DDL1) | (1<<DDL0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 007E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 007F PORTL=(0<<PORTL7) | (0<<PORTL6) | (0<<PORTL5) | (0<<PORTL4) | (0<<PORTL3) | (0<<PORTL2) | (0<<PORTL1) | (0<<PORTL0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0080 
; 0000 0081 // Timer/Counter 0 initialization
; 0000 0082 // Clock source: System Clock
; 0000 0083 // Clock value: Timer 0 Stopped
; 0000 0084 // Mode: Normal top=0xFF
; 0000 0085 // OC0A output: Disconnected
; 0000 0086 // OC0B output: Disconnected
; 0000 0087 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0088 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0089 TCNT0=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 008A OCR0A=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 008B OCR0B=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 008C 
; 0000 008D // Timer/Counter 1 initialization
; 0000 008E // Clock source: System Clock
; 0000 008F // Clock value: Timer1 Stopped
; 0000 0090 // Mode: Normal top=0xFFFF
; 0000 0091 // OC1A output: Disconnected
; 0000 0092 // OC1B output: Disconnected
; 0000 0093 // OC1C output: Disconnected
; 0000 0094 // Noise Canceler: Off
; 0000 0095 // Input Capture on Falling Edge
; 0000 0096 // Timer1 Overflow Interrupt: Off
; 0000 0097 // Input Capture Interrupt: Off
; 0000 0098 // Compare A Match Interrupt: Off
; 0000 0099 // Compare B Match Interrupt: Off
; 0000 009A // Compare C Match Interrupt: Off
; 0000 009B TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 009C TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 009D TCNT1H=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 009E TCNT1L=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 009F ICR1H=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00A0 ICR1L=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 00A1 OCR1AH=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 00A2 OCR1AL=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00A3 OCR1BH=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00A4 OCR1BL=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00A5 OCR1CH=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00A6 OCR1CL=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00A7 
; 0000 00A8 // Timer/Counter 2 initialization
; 0000 00A9 // Clock source: System Clock
; 0000 00AA // Clock value: Timer2 Stopped
; 0000 00AB // Mode: Normal top=0xFF
; 0000 00AC // OC2A output: Disconnected
; 0000 00AD // OC2B output: Disconnected
; 0000 00AE ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00AF TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00B0 TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00B1 TCNT2=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 00B2 OCR2A=0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 00B3 OCR2B=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00B4 
; 0000 00B5 // Timer/Counter 3 initialization
; 0000 00B6 // Clock source: System Clock
; 0000 00B7 // Clock value: Timer3 Stopped
; 0000 00B8 // Mode: Normal top=0xFFFF
; 0000 00B9 // OC3A output: Disconnected
; 0000 00BA // OC3B output: Disconnected
; 0000 00BB // OC3C output: Disconnected
; 0000 00BC // Noise Canceler: Off
; 0000 00BD // Input Capture on Falling Edge
; 0000 00BE // Timer3 Overflow Interrupt: Off
; 0000 00BF // Input Capture Interrupt: Off
; 0000 00C0 // Compare A Match Interrupt: Off
; 0000 00C1 // Compare B Match Interrupt: Off
; 0000 00C2 // Compare C Match Interrupt: Off
; 0000 00C3 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00C4 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00C5 TCNT3H=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00C6 TCNT3L=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00C7 ICR3H=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00C8 ICR3L=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00C9 OCR3AH=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00CA OCR3AL=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00CB OCR3BH=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00CC OCR3BL=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00CD OCR3CH=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00CE OCR3CL=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00CF 
; 0000 00D0 // Timer/Counter 4 initialization
; 0000 00D1 // Clock source: System Clock
; 0000 00D2 // Clock value: 1000.000 kHz
; 0000 00D3 // Mode: Fast PWM top=0x00FF
; 0000 00D4 // OC4A output: Disconnected
; 0000 00D5 // OC4B output: Disconnected
; 0000 00D6 // OC4C output: Disconnected
; 0000 00D7 // Noise Canceler: Off
; 0000 00D8 // Input Capture on Falling Edge
; 0000 00D9 // Timer Period: 0.256 ms
; 0000 00DA // Timer4 Overflow Interrupt: On
; 0000 00DB // Input Capture Interrupt: Off
; 0000 00DC // Compare A Match Interrupt: Off
; 0000 00DD // Compare B Match Interrupt: Off
; 0000 00DE // Compare C Match Interrupt: Off
; 0000 00DF TCCR4A=(0<<COM4A1) | (0<<COM4A0) | (0<<COM4B1) | (0<<COM4B0) | (0<<COM4C1) | (0<<COM4C0) | (0<<WGM41) | (1<<WGM40);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00E0 TCCR4B=(0<<ICNC4) | (0<<ICES4) | (0<<WGM43) | (1<<WGM42) | (0<<CS42) | (0<<CS41) | (1<<CS40);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00E1 TCNT4H=0xFC;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00E2 TCNT4L=0x18;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00E3 ICR4H=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00E4 ICR4L=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00E5 OCR4AH=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00E6 OCR4AL=0x00;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00E7 OCR4BH=0x00;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00E8 OCR4BL=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 00E9 OCR4CH=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00EA OCR4CL=0x00;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 00EB 
; 0000 00EC // Timer/Counter 5 initialization
; 0000 00ED // Clock source: System Clock
; 0000 00EE // Clock value: Timer5 Stopped
; 0000 00EF // Mode: Normal top=0xFFFF
; 0000 00F0 // OC5A output: Disconnected
; 0000 00F1 // OC5B output: Disconnected
; 0000 00F2 // OC5C output: Disconnected
; 0000 00F3 // Noise Canceler: Off
; 0000 00F4 // Input Capture on Falling Edge
; 0000 00F5 // Timer5 Overflow Interrupt: Off
; 0000 00F6 // Input Capture Interrupt: Off
; 0000 00F7 // Compare A Match Interrupt: Off
; 0000 00F8 // Compare B Match Interrupt: Off
; 0000 00F9 // Compare C Match Interrupt: Off
; 0000 00FA TCCR5A=(0<<COM5A1) | (0<<COM5A0) | (0<<COM5B1) | (0<<COM5B0) | (0<<COM5C1) | (0<<COM5C0) | (0<<WGM51) | (0<<WGM50);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00FB TCCR5B=(0<<ICNC5) | (0<<ICES5) | (0<<WGM53) | (0<<WGM52) | (0<<CS52) | (0<<CS51) | (0<<CS50);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00FC TCNT5H=0x00;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00FD TCNT5L=0x00;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00FE ICR5H=0x00;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00FF ICR5L=0x00;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0100 OCR5AH=0x00;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0101 OCR5AL=0x00;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0102 OCR5BH=0x00;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0103 OCR5BL=0x00;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0104 OCR5CH=0x00;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0105 OCR5CL=0x00;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0106 
; 0000 0107 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0108 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0109 
; 0000 010A // Timer/Counter 1 Interrupt(s) initialization
; 0000 010B TIMSK1=(0<<ICIE1) | (0<<OCIE1C) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 010C 
; 0000 010D // Timer/Counter 2 Interrupt(s) initialization
; 0000 010E TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 010F 
; 0000 0110 // Timer/Counter 3 Interrupt(s) initialization
; 0000 0111 TIMSK3=(0<<ICIE3) | (0<<OCIE3C) | (0<<OCIE3B) | (0<<OCIE3A) | (0<<TOIE3);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0112 
; 0000 0113 // Timer/Counter 4 Interrupt(s) initialization
; 0000 0114 TIMSK4=(0<<ICIE4) | (0<<OCIE4C) | (0<<OCIE4B) | (0<<OCIE4A) | (1<<TOIE4);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0115 
; 0000 0116 // Timer/Counter 5 Interrupt(s) initialization
; 0000 0117 TIMSK5=(0<<ICIE5) | (0<<OCIE5C) | (0<<OCIE5B) | (0<<OCIE5A) | (0<<TOIE5);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0118 
; 0000 0119 // External Interrupt(s) initialization
; 0000 011A // INT0: Off
; 0000 011B // INT1: Off
; 0000 011C // INT2: Off
; 0000 011D // INT3: Off
; 0000 011E // INT4: Off
; 0000 011F // INT5: Off
; 0000 0120 // INT6: Off
; 0000 0121 // INT7: Off
; 0000 0122 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0123 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0124 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0125 // PCINT0 interrupt: Off
; 0000 0126 // PCINT1 interrupt: Off
; 0000 0127 // PCINT2 interrupt: Off
; 0000 0128 // PCINT3 interrupt: Off
; 0000 0129 // PCINT4 interrupt: Off
; 0000 012A // PCINT5 interrupt: Off
; 0000 012B // PCINT6 interrupt: Off
; 0000 012C // PCINT7 interrupt: Off
; 0000 012D // PCINT8 interrupt: Off
; 0000 012E // PCINT9 interrupt: Off
; 0000 012F // PCINT10 interrupt: Off
; 0000 0130 // PCINT11 interrupt: Off
; 0000 0131 // PCINT12 interrupt: Off
; 0000 0132 // PCINT13 interrupt: Off
; 0000 0133 // PCINT14 interrupt: Off
; 0000 0134 // PCINT15 interrupt: Off
; 0000 0135 // PCINT16 interrupt: Off
; 0000 0136 // PCINT17 interrupt: Off
; 0000 0137 // PCINT18 interrupt: Off
; 0000 0138 // PCINT19 interrupt: Off
; 0000 0139 // PCINT20 interrupt: Off
; 0000 013A // PCINT21 interrupt: Off
; 0000 013B // PCINT22 interrupt: Off
; 0000 013C // PCINT23 interrupt: Off
; 0000 013D PCMSK0=(0<<PCINT7) | (0<<PCINT6) | (0<<PCINT5) | (0<<PCINT4) | (0<<PCINT3) | (0<<PCINT2) | (0<<PCINT1) | (0<<PCINT0);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 013E PCMSK1=(0<<PCINT15) | (0<<PCINT14) | (0<<PCINT13) | (0<<PCINT12) | (0<<PCINT11) | (0<<PCINT10) | (0<<PCINT9) | (0<<PCINT ...
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 013F PCMSK2=(0<<PCINT23) | (0<<PCINT22) | (0<<PCINT21) | (0<<PCINT20) | (0<<PCINT19) | (0<<PCINT18) | (0<<PCINT17) | (0<<PCIN ...
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0140 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0141 
; 0000 0142 // USART0 initialization
; 0000 0143 // USART0 disabled
; 0000 0144 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0145 
; 0000 0146 // USART1 initialization
; 0000 0147 // USART1 disabled
; 0000 0148 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0149 
; 0000 014A // USART2 initialization
; 0000 014B // USART2 disabled
; 0000 014C UCSR2B=(0<<RXCIE2) | (0<<TXCIE2) | (0<<UDRIE2) | (0<<RXEN2) | (0<<TXEN2) | (0<<UCSZ22) | (0<<RXB82) | (0<<TXB82);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 014D 
; 0000 014E // USART3 initialization
; 0000 014F // USART3 disabled
; 0000 0150 UCSR3B=(0<<RXCIE3) | (0<<TXCIE3) | (0<<UDRIE3) | (0<<RXEN3) | (0<<TXEN3) | (0<<UCSZ32) | (0<<RXB83) | (0<<TXB83);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0151 
; 0000 0152 // Analog Comparator initialization
; 0000 0153 // Analog Comparator: Off
; 0000 0154 // The Analog Comparator's positive input is
; 0000 0155 // connected to the AIN0 pin
; 0000 0156 // The Analog Comparator's negative input is
; 0000 0157 // connected to the AIN1 pin
; 0000 0158 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0159 ADCSRB=(0<<ACME);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 015A // Digital input buffer on AIN0: On
; 0000 015B // Digital input buffer on AIN1: On
; 0000 015C DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 015D 
; 0000 015E // ADC initialization
; 0000 015F // ADC disabled
; 0000 0160 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0161 
; 0000 0162 // SPI initialization
; 0000 0163 // SPI disabled
; 0000 0164 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0165 
; 0000 0166 // TWI initialization
; 0000 0167 // TWI disabled
; 0000 0168 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0169 
; 0000 016A // Graphic Display Controller initialization
; 0000 016B // The KS0108 connections are specified in the
; 0000 016C // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0000 016D // DB0 - PORTA Bit 0
; 0000 016E // DB1 - PORTA Bit 1
; 0000 016F // DB2 - PORTA Bit 2
; 0000 0170 // DB3 - PORTA Bit 3
; 0000 0171 // DB4 - PORTA Bit 4
; 0000 0172 // DB5 - PORTA Bit 5
; 0000 0173 // DB6 - PORTA Bit 6
; 0000 0174 // DB7 - PORTA Bit 7
; 0000 0175 // E - PORTJ Bit 4
; 0000 0176 // RD /WR - PORTE Bit 3
; 0000 0177 // RS - PORTE Bit 4
; 0000 0178 // /RST - PORTJ Bit 3
; 0000 0179 // CS1 - PORTJ Bit 7
; 0000 017A // CS2 - PORTH Bit 6
; 0000 017B 
; 0000 017C // Specify the current font for displaying text
; 0000 017D glcd_init_data.font=font5x7;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 017E // No function is used for reading
; 0000 017F // image data from external memory
; 0000 0180 glcd_init_data.readxmem=NULL;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0181 // No function is used for writing
; 0000 0182 // image data to external memory
; 0000 0183 glcd_init_data.writexmem=NULL;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0184 
; 0000 0185 glcd_init(&glcd_init_data);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0186 
; 0000 0187 // Global enable interrupts
; 0000 0188 #asm("sei")
;PCODE: $000000F4 VOL: 0
	sei
;PCODE: $000000F5 VOL: 0
; 0000 0189  //glcd_clear();
; 0000 018A while (1)
;PCODE: $000000F6 VOL: 0
; 0000 018B       {
; 0000 018C       // Place your code here
; 0000 018D            PORTH = PORTH7;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 018E            PORTB.4 = 1;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 018F            PORTB.5 = 1;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0190            PORTB.6 = 1;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0191            delay_ms(300);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0192            PORTH = !PORTH7;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0193            PORTB.4 = 0;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0194            PORTB.5 = 0;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0195            PORTB.6 = 0;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0196            delay_ms(300);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0197            //glcd_outtextf("TESLA");
; 0000 0198       }
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0199 }
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
